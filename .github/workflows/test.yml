name: Run Tests on Push

on:
  pull_request:
    branches:
      - '**'

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Unit Tests
        run: ./gradlew unitTest --fail-fast

  integration-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3307:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: terte_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u test_user -ptest"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:latest
        ports:
          - 6379:6379

      zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181

      kafka:
        image: confluentinc/cp-kafka:latest
        ports:
          - 9092:9092
        env:
          KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
          KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        options: >-
          --health-cmd="kafka-topics --bootstrap-server localhost:9092 --list || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create Table For Test & Insert test data
        run: |
          echo "Current directory:"
          pwd
          echo "Checking SQL file:"
          ls -al $GITHUB_WORKSPACE/application/src/test/resources/sql/
          
          mysql -h 127.0.0.1 -P 3307 -u test_user -ptest terte_db < $GITHUB_WORKSPACE/application/src/test/resources/sql/test-data.sql

      - name: Copy Redis test data to container
        run: |
          echo "Copying Redis test data to Redis container..."
          docker cp $GITHUB_WORKSPACE/application/src/test/resources/redis/test-data.txt $(docker ps -q --filter ancestor=redis:latest):/test-data.txt
          echo "Redis test data copied successfully."

      - name: Insert test data into Redis
        run: |
          echo "Loading Redis test data..."
          docker exec $(docker ps -q --filter ancestor=redis:latest) sh -c "redis-cli < /test-data.txt"
          echo "Redis test data inserted successfully."
      
      

      - name: Run Integration tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3307/terte_db
          SPRING_DATASOURCE_USERNAME: test_user
          SPRING_DATASOURCE_PASSWORD: test
          SPRING_JPA_HIBERNATE_DDL_AUTO: none
        run: ./gradlew :application:integrationTest --info | tee gradle-test.log
      

      - name: Print Gradle test logs on failure
        if: failure()
        run: cat gradle-test.log

